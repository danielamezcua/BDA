-- QURO
---------------------------------------
CREATE OR REPLACE PROCEDURE MOVERUNIDAD
(
	P_AGENCIA_DESTINO IN VARCHAR2,
	P_ID_INVENTARIO IN NUMBER
)
AS
V_EXISTE_UNIDAD NUMBER;
V_STATUS_UNIDAD VARCHAR2(100);
BEGIN
  SELECT COUNT(1) INTO V_EXISTE_UNIDAD FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO;
	IF V_EXISTE_UNIDAD = 0 THEN
    raise_application_error(-20000,'{la unidad no existe}');
  ELSE
    SELECT STATUS INTO V_STATUS_UNIDAD FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO;
    IF V_STATUS_UNIDAD = 'en venta' THEN
      IF P_AGENCIA_DESTINO = 'MTY' THEN
        INSERT INTO INVENTARIO@MTY (SELECT * FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO); 
        DELETE FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        COMMIT;
      ELSIF P_AGENCIA_DESTINO = 'HMO' THEN 
        INSERT INTO INVENTARIO@HMO (SELECT * FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO); 
        DELETE FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        COMMIT;
      ELSIF P_AGENCIA_DESTINO = 'TG' THEN 
        INSERT INTO INVENTARIO@TG SELECT * FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        DELETE FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        COMMIT;
      END IF;
    ELSE 
      raise_application_error(-20001,'{la unidad ya ha sido vendida}');
    END IF;
  END IF;
END MOVERUNIDAD;
/
---------------------------------------

-- TG
---------------------------------------
CREATE OR REPLACE PROCEDURE MOVERUNIDAD
(
	P_AGENCIA_DESTINO IN VARCHAR2,
	P_ID_INVENTARIO IN NUMBER
)
AS
V_EXISTE_UNIDAD NUMBER;
V_STATUS_UNIDAD VARCHAR2(100);
BEGIN
  SELECT COUNT(1) INTO V_EXISTE_UNIDAD FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO;
	IF V_EXISTE_UNIDAD = 0 THEN
    raise_application_error(-20000,'{la unidad no existe}');
  ELSE
    SELECT STATUS INTO V_STATUS_UNIDAD FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO;
    IF V_STATUS_UNIDAD = 'en venta' THEN
      IF P_AGENCIA_DESTINO = 'MTY' THEN
        INSERT INTO INVENTARIO@MTY (SELECT * FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO); 
        DELETE FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        COMMIT;
      ELSIF P_AGENCIA_DESTINO = 'HMO' THEN 
        INSERT INTO INVENTARIO@HMO (SELECT * FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO); 
        DELETE FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        COMMIT;
      ELSIF P_AGENCIA_DESTINO = 'QURO' THEN 
        INSERT INTO INVENTARIO@QURO SELECT * FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        DELETE FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        COMMIT;
      END IF;
    ELSE 
      raise_application_error(-20001,'{la unidad ya ha sido vendida}');
    END IF;
  END IF;
END MOVERUNIDAD;
/
---------------------------------------

-- MTY
---------------------------------------
CREATE OR REPLACE PROCEDURE MOVERUNIDAD
(
	P_AGENCIA_DESTINO IN VARCHAR2,
	P_ID_INVENTARIO IN NUMBER
)
AS
V_EXISTE_UNIDAD NUMBER;
V_STATUS_UNIDAD VARCHAR2(100);
BEGIN
  SELECT COUNT(1) INTO V_EXISTE_UNIDAD FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO;
	IF V_EXISTE_UNIDAD = 0 THEN
    raise_application_error(-20000,'{la unidad no existe}');
  ELSE
    SELECT STATUS INTO V_STATUS_UNIDAD FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO;
    IF V_STATUS_UNIDAD = 'en venta' THEN
      IF P_AGENCIA_DESTINO = 'QURO' THEN
        INSERT INTO INVENTARIO@QURO (SELECT * FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO); 
        DELETE FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        COMMIT;
      ELSIF P_AGENCIA_DESTINO = 'HMO' THEN 
        INSERT INTO INVENTARIO@HMO (SELECT * FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO); 
        DELETE FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        COMMIT;
      ELSIF P_AGENCIA_DESTINO = 'TG' THEN 
        INSERT INTO INVENTARIO@TG SELECT * FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        DELETE FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        COMMIT;
      END IF;
    ELSE 
      raise_application_error(-20001,'{la unidad ya ha sido vendida}');
    END IF;
  END IF;
END MOVERUNIDAD;
/
---------------------------------------

-- HMO
---------------------------------------
CREATE OR REPLACE PROCEDURE MOVERUNIDAD
(
	P_AGENCIA_DESTINO IN VARCHAR2,
	P_ID_INVENTARIO IN NUMBER
)
AS
V_EXISTE_UNIDAD NUMBER;
V_STATUS_UNIDAD VARCHAR2(100);
BEGIN
  SELECT COUNT(1) INTO V_EXISTE_UNIDAD FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO;
	IF V_EXISTE_UNIDAD = 0 THEN
    raise_application_error(-20000,'{la unidad no existe}');
  ELSE
    SELECT STATUS INTO V_STATUS_UNIDAD FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO;
    IF V_STATUS_UNIDAD = 'en venta' THEN
      IF P_AGENCIA_DESTINO = 'MTY' THEN
        INSERT INTO INVENTARIO@MTY (SELECT * FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO); 
        DELETE FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        COMMIT;
      ELSIF P_AGENCIA_DESTINO = 'QURO' THEN 
        INSERT INTO INVENTARIO@QURO (SELECT * FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO); 
        DELETE FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        COMMIT;
      ELSIF P_AGENCIA_DESTINO = 'TG' THEN 
        INSERT INTO INVENTARIO@TG SELECT * FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        DELETE FROM INVENTARIO WHERE ID_INVENTARIO = P_ID_INVENTARIO; 
        COMMIT;
      END IF;
    ELSE 
      raise_application_error(-20001,'{la unidad ya ha sido vendida}');
    END IF;
  END IF;
END MOVERUNIDAD;
/
---------------------------------------